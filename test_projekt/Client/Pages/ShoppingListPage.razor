@using blazor_modul_13_14.Client.Services
@using blazor_modul_13_14.Shared.Models
@using System.Net.Http.Json
@using System.Net
@using Pages
@using System.Net.Http.Headers

@page "/shoppinglist"

<h3>Shopping Liste (@Items.Count(item => !item.HaveBought))</h3>

@foreach (var item in Items)
{
    <p>
        Id: @item.Id
        <br />
        Name: @item.Name
        <br />
        Quantity: @item.Quantity
        <br />
        Købt: <input type="checkbox"
                     @bind="item.HaveBought" @onclick="() => UpdateCheckBox(item)" />
    </p>
}

<div>
    ID to delete:
    <input type @bind="ItemIDSelected" />
    <button @onclick="DeleteItemHandler">
        Delete item
    </button>
</div>

@code {
    private List<ShoppingItem> Items = new List<ShoppingItem>();
    private int ItemIDSelected { get; set; } = 0;
    private int ErrorCode { get; set; } = 0;

    [Inject]
    public IShoppingService Service { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Items = (await Service.GetAllItems()).ToList();

    }

    public async Task DeleteItemHandler()
    {
        ErrorCode = (await Service.DeleteItem(ItemIDSelected));
        Console.WriteLine($"Id seletected to delete {ItemIDSelected}, responsecode: {ErrorCode} ");
        if (ErrorCode == (int)HttpStatusCode.OK)
        {
            Items = (await Service.GetAllItems()).ToList();

        }
    }

    private async Task UpdateCheckBox(ShoppingItem item)
    {
        item.HaveBought = !item.HaveBought;
        ErrorCode = await Service.UpdateItem(item);
    }
}

