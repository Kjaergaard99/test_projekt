@using blazor_modul_13_14.Shared.Models;
@using blazor_modul_13_14.Client.Services;
@using Pages;

@page "/addshoppingitem"

<h3>Add Shopping Item</h3>

<EditForm EditContext="@EditContext" class="row p-3">
    <DataAnnotationsValidator />
    <div class="col-md-12 mb-3">
        <label for="Id">Id</label>
        <InputNumber id="Id" @bind-Value="item.Id" class="form-control" />
        <ValidationMessage For="@(() => item.Id)" />
    </div>

    <div class="col-md-6 mb-3">
        <label for="Name">Name</label>
        <InputText id="Name" @bind-Value="item.Name" class="form-control" />
        <ValidationMessage For="@(() => item.Name)" />
    </div>

    <div class="col-md-6 mb-3">
        <label for="Quantity">Quantity</label>
        <InputNumber id="Quantity" @bind-Value="item.Quantity" class="form-control" />
        <ValidationMessage For="@(() => item.Quantity)" />
    </div>

    <div class="col-md-6 mb-3">
        <label for="HaveBought">HaveBought</label>
        <InputCheckbox id="HaveBought" @bind-Value="item.HaveBought" />
        
    </div>

    <div class="col-12 mb-3">
        <button class="btn btn-primary" @onclick="AddShoppingItemHandler">Add Shopping Item</button>
    </div>
</EditForm>

@code {
    private ShoppingItem item = new ShoppingItem();
    private EditContext EditContext;


    protected override void OnInitialized()
    {
        EditContext = new EditContext(item);
    }


    [Inject]
    public IShoppingService Service { get; set; }
    private int ErrorCode { get; set; } = 0;

    private async Task AddShoppingItemHandler()
    {
        ErrorCode = await Service.AddItem(item);
        Console.WriteLine("Shopping item added: return code: " + ErrorCode);

    }

    
}

