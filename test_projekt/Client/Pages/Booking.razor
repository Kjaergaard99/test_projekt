@using test_projekt.Shared.Models;
@using test_projekt.Client.Services;

@page "/booking"

<PageTitle>Booking Side</PageTitle>

<h1>Shelterbooking i Århus</h1>

<div class="parent">
<div class="shelters">
    @foreach (var item in Items)
    {
    <p>
        <b>Navn: </b>@item.Property.Navn
        <br>
        <b>Beskrivelse:</b> @item.Property.Beskrivelse
        <br>
        <b>Adresse:</b> @item.Property.Vejnavn @item.Property.HusNr
        <br>
        <b>Antal pladser:</b> @item.Property.AntalPladser
        <br />
        <!--<input type="checkbox" id="checkbox"/>-->
        <button class="VælgShelter btn btn-success">Vælg dette shelter</button>
        <br />
        <br />

    </p>
}
    </div>


<div class="booking">
    <EditForm EditContext="@EditContext" class="row p-3">
        <div class="col-md-12 mb-3">
            <label for="Navn">Navn</label>
            <InputText id="Navn" @bind-Value="brugerBooking.Navn" class="form-control" />
        </div>

        <br />

        <div class="col-md-12 mb-3">
            <label for="Email">Email</label>
            <InputText id="Email" @bind-Value="brugerBooking.Email" class="form-control" />

        </div>

        <br />

        <div class="col-md-6 mb-3">
            <label for="StartDato">Start dato</label>
            <InputDate id="StartDato" @bind-Value="brugerBooking.StartDato" class="form-control" />
        </div>

        <div class="col-md-6 mb-3">
            <label for="SlutDato">Slut dato</label>
            <InputDate id="SlutDato" @bind-Value="brugerBooking.SlutDato" class="form-control" />
        </div>


        <br />


        <div class="col-md-6 mb-3">
            <label for="SlutDato">Valgt shelter: </label>

        </div>

        <br />

        <div class="col-12 mb-3">
            <button class="btn btn-primary" @onclick="AddBookingHandler">Book shelter</button>
        </div>

    </EditForm>
</div>
</div>
    @code {
        private List<Shelter> Items = new List<Shelter>();
        private EditContext EditContext;
        private BrugerBooking brugerBooking = new BrugerBooking();
        private int ErrorCode { get; set; } = 0;

        [Inject]
        public IShelterService Service { get; set; }

        [Inject]
        public IBookingService BookingService { get; set; }


        protected override void OnInitialized()
        {
            EditContext = new EditContext(brugerBooking);
        }


        protected override async Task OnInitializedAsync()
        {
            Items = (await Service.GetAllItems()).ToList();
        }

        /*private async Task AddBookingHandler(BrugerBooking brugerBooking)
        {
            ErrorCode = await BookingService.AddBooking(brugerBooking); //evt slet
            Console.WriteLine("Shelter booket: " + ErrorCode);
        }*/

        private async Task AddBookingHandler()
        {
            ErrorCode = await BookingService.AddBooking(brugerBooking); //evt slet
            Console.WriteLine("Shelter booket: " + ErrorCode);
        }
    }
